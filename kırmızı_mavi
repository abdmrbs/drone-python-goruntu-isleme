import cv2
import numpy as np
import time
import math
import dronekit
from dronekit import connect, VehicleMode, LocationGlobalRelative, LocationGlobal

#########################################################

lower2 = np.array([90,50,50])                    #MAVİ RENK
upper2 = np.array([130,255,255])

lower = np.array([0,170,50])                     #KIRMIZI RENK
upper = np.array([6,255,255])
lower1 = np.array([175,170,50])
upper1 = np.array([180,255,255])

kernel = np.ones((5,5), dtype=np.uint8)          #dilaete için kullanılır

#########################################################

global konumlist1,konumlist2, loc_1, loc_2
konumlist1= [0,0]
konumlist2= [0,0]


def kirmiziSay(frame_HSV):
    global mask

    mask = cv2.inRange(frame_HSV, lower, upper)
    redpix1 = cv2.countNonzero(mask)
    mask = cv2.inRange(frame_HSV, lower1, upper1)
    redpix2 = cv2.countNonzero(mask)
    sayac = redpix1 + redpix2
    return sayac

def maviSay(frame_HSV):
    global mask

    mask = cv2.inRange(frame_HSV, lower2, upper2)
    sayac = cv2.countNonZero(mask)
    return sayac


def sekilbul(frame_can):

    sekiller , hierarchy= cv2.findContours(frame_can, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_NONE)

    for sekil in sekiller:

        alan = cv2.contourArea(sekil)
        if alan > 3000 :

            cv2.drawContours(frame, sekil, -1, (0,255,0), 2)
            cevre = cv2.arcLength(sekil, True)

            tahmin = cv2.approxPolyDP(sekil, 0.02*cevre, True)
            tahmini_kenar_say = len(tahmin)
            x, y, w, h = cv2.boundingRect(tahmin)
            #ar = w / float(h)
            kucultulmus = frame[y:y+h, x:x+w]

            if tahmini_kenar_say == 4:

                frame_HSV = cv2.cvtColor(kucultulmus, cv2.COLOR_BGR2HSV)
                blue_px_say = maviSay(frame_HSV)
                red_px_say = kirmiziSay(frame_HSV)

                if blue_px_say > 3000 :
                    kareMerkez = (x+(w//2), y+(h//2))
                    cv2.rectangle(frame_copy, (x, y), (x + w, y + h), (167, 54, 169), 2)
                    cv2.rectangle(frame_copy, (x, y), (x + w, y + h), (255, 255, 0), 1)
                    cv2.line(frame_copy, kareMerkez, (320, 240), (0, 255, 0), 2)
                    cv2.putText(frame_copy, f'MAVI HEDEF {blue_px_say}', (x, y - 5),
                                cv2.FONT_HERSHEY_COMPLEX, 0.5, (0, 0, 0), 1)
                    distance = math.sqrt(((320 - kareMerkez[0]) ** 2) + ((240 - kareMerkez[1]) ** 2))
                    print("Line Lenght :",distance)
                    if (distance <=60):
                        konumlist2[0]= IHA_ENLEM
                        konumlist2[1] = IHA_BOYLAM



                elif red_px_say > 3000 :
                    kareMerkez = (x+(w//2), y+(h//2))
                    cv2.rectangle(frame_copy, (x, y), (x + w, y + h), (167, 54, 169), 2)
                    cv2.rectangle(frame_copy, (x, y), (x + w, y + h), (255, 255, 0), 1)
                    cv2.line(frame_copy, kareMerkez, (320, 240), (0, 255, 0), 2)
                    cv2.putText(frame_copy, f'KIRMIZI HEDEF {red_px_say}', (x, y - 5),
                                cv2.FONT_HERSHEY_COMPLEX, 0.5, (0, 0, 0), 1)
                    distance = math.sqrt(((320 - kareMerkez[0]) ** 2) + ((240 - kareMerkez[1]) ** 2))
                    print("Line Lenght :",distance)
                    if (distance <=60):
                        konumlist2[0]= IHA_ENLEM
                        konumlist2[1] = IHA_BOYLAM

                else:
                    cv2.rectangle(frame_copy, (x,y), (x+w, y+h), (167,54,169),2)
                    cv2.putText(frame_copy, f'HEDEF', (x,y-5),
                                cv2.FONT_HERSHEY_COMPLEX,0.5,(0,0,0),1)

cap = cv2.VideoCapture(0)


while True:
    succes, frame = cap.read()

    frame_copy = frame.copy()
    frame_b = cv2.GaussianBlur(frame, (15,15), 1)
    frame_can = cv2.Canny(frame_b, 110,110)
    frame_dilate = cv2.dilate(frame_can, kernel, iterations=1)
    cv2.circle(frame_copy, (320, 240), 3, (0, 255, 255), cv2.FILLED, 1)
    IHA_ENLEM = vehicle.location.global_frame.lat
    IHA_BOYLAM = vehicle.location.global_frame.lon
    print("KONUMLIST1", konumlist1)
    print("KONUMLIST2", konumlist2)

    sekilbul(frame_dilate)
    cv2.imshow('W-1', frame_copy)
    cv2.imshow('W-2', frame)

    if cv2.waitKey(25) & 0xFF == ord('q'):
        cv2.destroyAllWindows()
        break

cap.release()
cv2.destroyAllWindows()

cap.set (3, 640)
cap.set (4, 480)

while True:
    success, frame = cap.read()
    frame_copy = frame.copy()
    frame_b = cv2.GaussianBlur(frame, (15, 15), 1)
    frame_can = cv2.Canny(frame_b, 110, 110)
    frame_dilate = cv2.dilate(frame_can, kernel, iterations=1)
    sekilbul(frame_dilate)

    cv2.imshow('Pencere', frame_copy)
    cv2.imshow('Pencere', frame)

    if cv2.waitKey(25) & 0xFF == ord('q'):
        break








